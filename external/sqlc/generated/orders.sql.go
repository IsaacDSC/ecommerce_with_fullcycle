// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: orders.sql

package sqlc

import (
	"context"
	"database/sql"
)

const createOrder = `-- name: CreateOrder :exec
INSERT INTO orders (
"id",
"total_price",
"delivery_id",
"status"
) VALUES ($1, $2, $3, $4)
`

type CreateOrderParams struct {
	ID         string
	TotalPrice int32
	DeliveryID string
	Status     string
}

func (q *Queries) CreateOrder(ctx context.Context, arg CreateOrderParams) error {
	_, err := q.db.ExecContext(ctx, createOrder,
		arg.ID,
		arg.TotalPrice,
		arg.DeliveryID,
		arg.Status,
	)
	return err
}

const createOrderItems = `-- name: CreateOrderItems :exec
INSERT INTO order_items (
"id",
"product_id",
"quantity",
"product_price",
"order_id"
) VALUES ($1, $2, $3, $4, $5)
`

type CreateOrderItemsParams struct {
	ID           string
	ProductID    string
	Quantity     int32
	ProductPrice int32
	OrderID      string
}

func (q *Queries) CreateOrderItems(ctx context.Context, arg CreateOrderItemsParams) error {
	_, err := q.db.ExecContext(ctx, createOrderItems,
		arg.ID,
		arg.ProductID,
		arg.Quantity,
		arg.ProductPrice,
		arg.OrderID,
	)
	return err
}

const registryDelivery = `-- name: RegistryDelivery :exec
INSERT INTO deliveries (
"id",
"CEP",
"address",
"number",
"country",
"district",
"city",
"delivery_price"
) VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
`

type RegistryDeliveryParams struct {
	ID            string
	CEP           string
	Address       sql.NullString
	Number        sql.NullString
	Country       sql.NullString
	District      sql.NullString
	City          sql.NullString
	DeliveryPrice int32
}

func (q *Queries) RegistryDelivery(ctx context.Context, arg RegistryDeliveryParams) error {
	_, err := q.db.ExecContext(ctx, registryDelivery,
		arg.ID,
		arg.CEP,
		arg.Address,
		arg.Number,
		arg.Country,
		arg.District,
		arg.City,
		arg.DeliveryPrice,
	)
	return err
}
